{"version":3,"sources":["Components/Nav.js","Components/Home.js","Components/Currency.js","Components/CurrencyDetail.js","Components/Predictionsettings.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navStyle","color","className","src","alt","style","to","Home","THEME","HeaderRow","Row","Currency","useState","curritem","setCurritem","league","setLeague","search","setSearch","theme","useTheme","useEffect","a","axios","get","result","console","log","data","fetchData","nodes","filter","item","Name","toLowerCase","includes","display","justifyContent","alignItems","DropdownButton","id","title","Dropdown","Item","onClick","e","target","textContent","htmlFor","type","onChange","event","value","layout","custom","tableList","width","map","cur","Image","pathname","state","CurName","Id","League","Price","CurrencyDetail","match","location","useLocation","setItem","predicteditem","setPredictedItem","pastleague","setPastLeague","showPrediction","setShowPrediction","itemlink","setItemLink","fetchOldData","oldLeague","params","link","replace","x","CustomTooltip","active","payload","label","length","Button","variant","fetchPredictedPrice","LineChart","height","margin","top","right","bottom","left","Line","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","dy","YAxis","position","angle","Tooltip","content","href","Predictionsettings","settings","setSettings","units","setUnits","activation","setActivation","fitsettings","setFitSettings","epochs","setEpochs","batchsize","setBatchSize","error","setError","apiresponse","setApiResponse","showError","setShowError","showModel","setShowModel","getresponse","setGetResponse","postresponse","setPostResponse","showResponse","setShowResponse","listItems","layer","amount","function","deleteItem","index","tmp","i","splice","SettingsError","Alert","SettingsModel","timeId","setTimeout","clearTimeout","setBackendModel","version","post","model","Orig","ResponseTable","Table","Container","striped","bordered","hover","Form","Control","name","placeholder","isNaN","Number","isInteger","push","clicked","resultFromGet","layersettings","resultFromPost","newModel","createNewModel","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14a2b50e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  const navStyle = {\r\n    color: \"white\",\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <img className=\"logo\" src={\"/final_logo_small.png\"} alt=\"Logo\"></img>\r\n      <ul className=\"nav-links\">\r\n        <Link style={navStyle} to=\"/\">\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/Currency\">\r\n          <li>Currency</li>\r\n        </Link>\r\n        <Link style={navStyle} to=\"/Predictionsettings\">\r\n          <li>ML model settings</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Header,\r\n  HeaderRow,\r\n  HeaderCell,\r\n  Body,\r\n  Row,\r\n  Cell,\r\n} from \"@table-library/react-table-library/table\";\r\nimport { useTheme } from \"@table-library/react-table-library/theme\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst THEME = {\r\n  HeaderRow: `  \r\n    font-weight: bold;\r\n    font-size: 24px;\r\n \r\n    background-color: #eaf5fd;\r\n  `,\r\n  Row: `\r\n    font-size: 16px;\r\n    \r\n    &:hover {\r\n      color: #212529;\r\n      cursor: default;\r\n    }\r\n  `,\r\n};\r\n\r\nfunction Currency() {\r\n  let [curritem, setCurritem] = useState([]);\r\n  let [league, setLeague] = useState(\"Scourge\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const theme = useTheme(THEME);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await axios.get(`/api/getCurrency?League=${league}`);\r\n      //console.log(\"Result from api:\");\r\n      console.log(result);\r\n      setCurritem([...result.data]);\r\n    }\r\n    fetchData();\r\n  }, [league]);\r\n\r\n  const data = {\r\n    nodes: curritem.filter((item) =>\r\n      item.Name.toLowerCase().includes(search.toLowerCase())\r\n    ),\r\n  };\r\n  return (\r\n    <>\r\n      <div>Select ongoing League</div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <DropdownButton id=\"dropdown-basic-button\" title={league}>\r\n          <Dropdown.Item\r\n            onClick={(e) => {\r\n              setLeague(e.target.textContent);\r\n            }}\r\n          >\r\n            Scourge\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={(e) => {\r\n              setLeague(e.target.textContent);\r\n            }}\r\n          >\r\n            Hardcore Scourge\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={(e) => {\r\n              setLeague(e.target.textContent);\r\n            }}\r\n          >\r\n            Standard\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={(e) => {\r\n              setLeague(e.target.textContent);\r\n            }}\r\n          >\r\n            Hardcore\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <label htmlFor=\"search\">\r\n          Search by Name: <br></br>\r\n          <input\r\n            id=\"search\"\r\n            type=\"text\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <>\r\n        <Table data={data} theme={theme} layout={{ custom: true }}>\r\n          {(tableList) => (\r\n            <>\r\n              <Header>\r\n                <HeaderRow>\r\n                  <HeaderCell style={{ width: \"100px\" }}>Item</HeaderCell>\r\n                  <HeaderCell style={{ width: \"100px\" }}>Price</HeaderCell>\r\n                </HeaderRow>\r\n              </Header>\r\n              <Body>\r\n                {tableList.map((cur, id) => (\r\n                  <Row key={id} item={cur} style={{ width: \"200px\" }}>\r\n                    <Cell style={{ width: \"100px\" }}>\r\n                      {\r\n                        <img\r\n                          src={cur.Image}\r\n                          alt={\"Picture of \" + cur.Name}\r\n                        ></img>\r\n                      }{\" \"}\r\n                      <Link\r\n                        to={{\r\n                          pathname: `/Currency/${cur.Name}`,\r\n                          state: {\r\n                            CurName: cur.Name,\r\n                            Id: cur.Id,\r\n                            League: league,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {cur.Name}\r\n                      </Link>\r\n                    </Cell>\r\n                    <Cell style={{ width: \"100px\" }}>{cur.Price}</Cell>\r\n                  </Row>\r\n                ))}\r\n              </Body>\r\n            </>\r\n          )}\r\n        </Table>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Currency;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n} from \"recharts\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Button from \"react-bootstrap/button\";\r\n\r\nfunction CurrencyDetail({ match }) {\r\n  const location = useLocation();\r\n  let [item, setItem] = useState([]);\r\n  let [predicteditem, setPredictedItem] = useState([]);\r\n  let [league, setLeague] = useState([location.state.League]);\r\n  let [pastleague, setPastLeague] = useState(\"Expedition\");\r\n  const [showPrediction, setShowPrediction] = useState(false);\r\n  let [itemlink, setItemLink] = useState(\"\");\r\n\r\n  async function fetchPredictedPrice() {\r\n    const result = await axios.get(\r\n      `/api/getPredictCurrency?Name=${location.state.CurName}`\r\n    );\r\n    console.log(result);\r\n    setPredictedItem([...result.data]);\r\n  }\r\n\r\n  async function fetchOldData(oldLeague) {\r\n    setPastLeague(oldLeague);\r\n    const result = await axios.get(\r\n      `/api/getPastCurrency?League=${oldLeague}&Id=${location.state.Id}`\r\n    );\r\n    //console.log(\"Result from api:\");\r\n    console.log(result);\r\n    setItem([...result.data]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"location:\");\r\n    console.log(location);\r\n    async function fetchData() {\r\n      const result = await axios.get(\r\n        `/api/getCurrencyDetails?League=${league}&name=${match.params.id}&Id=${location.state.Id}`\r\n      );\r\n      console.log(result);\r\n      setItem([...result.data]);\r\n    }\r\n    fetchData();\r\n    if (league[0] === \"Scourge\") {\r\n      setShowPrediction(true);\r\n    } else setShowPrediction(false);\r\n    let link = match.params.id.replace(/ /g, \"_\", function (x) {\r\n      return x;\r\n    });\r\n    setItemLink(`https://www.poewiki.net/wiki/${link}`);\r\n  }, [league, location, match.params.id]);\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">{`Day: ${label}`}</p>\r\n          <p className=\"price\">{`Price: ${payload[0].value} Chaos`}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const League = () => (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h2>Predicted price</h2>\r\n      </div>\r\n      <Button variant=\"info\" onClick={() => fetchPredictedPrice()}>\r\n        Show predicted price\r\n      </Button>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <LineChart\r\n          width={1200}\r\n          height={600}\r\n          data={predicteditem}\r\n          margin={{ top: 5, right: 20, bottom: 30, left: 40 }}\r\n        >\r\n          <Line type=\"monotone\" dataKey=\"Price\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis\r\n            dataKey=\"Day\"\r\n            label={{\r\n              value: \"Days since League start\",\r\n              dy: 20,\r\n            }}\r\n          />\r\n          <YAxis\r\n            label={{\r\n              value: \"Price in Chaos\",\r\n              position: \"left\",\r\n              angle: -90,\r\n            }}\r\n          />\r\n          <Tooltip content={<CustomTooltip />} />\r\n        </LineChart>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        Detailed overview for <a href={itemlink}>{match.params.id}</a>\r\n      </h3>\r\n      <div>Select ongoing League</div>\r\n      <DropdownButton id=\"dropdown-basic-button\" title={league}>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            setLeague([...[e.target.textContent]]);\r\n          }}\r\n        >\r\n          Scourge\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            setLeague([...[e.target.textContent]]);\r\n          }}\r\n        >\r\n          Hardcore Scourge\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            setLeague([...[e.target.textContent]]);\r\n          }}\r\n        >\r\n          Standard\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            setLeague([...[e.target.textContent]]);\r\n          }}\r\n        >\r\n          Hardcore\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n      <div>Browse past League data</div>\r\n      <DropdownButton id=\"dropdown-basic-button\" title={pastleague}>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            fetchOldData(e.target.textContent);\r\n          }}\r\n        >\r\n          Expedition\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            fetchOldData(e.target.textContent);\r\n          }}\r\n        >\r\n          Hardcore Expedition\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            fetchOldData(e.target.textContent);\r\n          }}\r\n        >\r\n          Ultimatum\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            fetchOldData(e.target.textContent);\r\n          }}\r\n        >\r\n          Hardcore Ultimatum\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            fetchOldData(e.target.textContent);\r\n          }}\r\n        >\r\n          Ritual\r\n        </Dropdown.Item>\r\n        <Dropdown.Item\r\n          onClick={(e) => {\r\n            fetchOldData(e.target.textContent);\r\n          }}\r\n        >\r\n          Hardcore Ritual\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h2>Real price</h2>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <LineChart\r\n          width={1200}\r\n          height={600}\r\n          data={item}\r\n          margin={{ top: 5, right: 20, bottom: 30, left: 40 }}\r\n        >\r\n          <Line type=\"monotone\" dataKey=\"History\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n          <XAxis\r\n            dataKey=\"Dates\"\r\n            label={{\r\n              value: \"Date\",\r\n              dy: 20,\r\n            }}\r\n          />\r\n          <YAxis\r\n            label={{\r\n              value: \"Price in Chaos\",\r\n              position: \"left\",\r\n              angle: -90,\r\n            }}\r\n          />\r\n          <Tooltip content={<CustomTooltip />} />\r\n        </LineChart>\r\n      </div>\r\n      {showPrediction ? <League /> : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrencyDetail;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport axios from \"axios\";\r\n\r\nfunction Predictionsettings() {\r\n  let [settings, setSettings] = useState([]);\r\n  let [units, setUnits] = useState();\r\n  let [activation, setActivation] = useState(\"ReLU\");\r\n  let [fitsettings, setFitSettings] = useState([]);\r\n  let [epochs, setEpochs] = useState(0);\r\n  let [batchsize, setBatchSize] = useState(0);\r\n  let [error, setError] = useState(\"\");\r\n  let [apiresponse, setApiResponse] = useState([]);\r\n  const [showError, setShowError] = useState(false);\r\n  const [showModel, setShowModel] = useState(false);\r\n  let [getresponse, setGetResponse] = useState([]);\r\n  let [postresponse, setPostResponse] = useState([]);\r\n  const [showResponse, setShowResponse] = useState(false);\r\n\r\n  let listItems = settings.map((layer, id) => (\r\n    <tr key={id}>\r\n      <td>{id + 1}</td>\r\n      <td>{layer.amount}</td>\r\n      <td>{layer.function}</td>\r\n      <td>\r\n        <Button variant=\"danger\" onClick={() => deleteItem(id)}>\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    let x = { epochs: epochs, batchsize: batchsize };\r\n    setFitSettings(x);\r\n  }, [epochs, batchsize]);\r\n\r\n  const deleteItem = (index) => {\r\n    setShowError(false);\r\n    let tmp = settings;\r\n    for (let i = 0; i < tmp.length; i++) {\r\n      if (i === index) {\r\n        tmp.splice(i, 1);\r\n        setSettings([...tmp]);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const clicked = () => {\r\n    if (\r\n      units < 1 ||\r\n      units > 1000 ||\r\n      isNaN(units) ||\r\n      Number.isInteger(units) ||\r\n      !(units % 1 === 0)\r\n    ) {\r\n      setError(\r\n        \"Error, units must be an integer equal or greater than 1, and less than 1000\"\r\n      );\r\n      setShowError(true);\r\n      return;\r\n    } else if (settings.length + 1 > 10) {\r\n      setError(\"Error, maximum amount of layers is 10\");\r\n      setShowError(true);\r\n      return;\r\n    } else setShowError(false);\r\n    let tmp = settings;\r\n    tmp.push({ amount: units, function: activation });\r\n    for (let i = 0; i < tmp.length; i++) {\r\n      tmp[i].id = i;\r\n    }\r\n    console.log(tmp);\r\n    setSettings([...tmp]);\r\n  };\r\n\r\n  const SettingsError = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Alert variant={\"danger\"}>{error}</Alert>\r\n      </div>\r\n    );\r\n  };\r\n  const SettingsModel = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Alert variant={\"success\"}>{apiresponse}</Alert>\r\n      </div>\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    const timeId = setTimeout(() => {\r\n      setShowModel(false);\r\n    }, 3000);\r\n\r\n    return () => {\r\n      setShowModel(true);\r\n      clearTimeout(timeId);\r\n    };\r\n  }, [apiresponse]);\r\n\r\n  const setBackendModel = (version) => {\r\n    async function Orig() {\r\n      const result = await axios.post(`/api/setModel`, {\r\n        model: version,\r\n      });\r\n      console.log(result);\r\n      setApiResponse([...result.data]);\r\n    }\r\n    Orig();\r\n  };\r\n  const createNewModel = () => {\r\n    setShowResponse(true);\r\n    async function newModel() {\r\n      const resultFromGet = await axios.get(`/api/getCurrenctData`);\r\n      console.log(resultFromGet);\r\n      setGetResponse([...resultFromGet.data]);\r\n      const resultFromPost = await axios.post(`/api/createNewModel`, {\r\n        fitsettings: fitsettings,\r\n        layersettings: settings,\r\n      });\r\n      console.log(resultFromPost);\r\n      setPostResponse([...resultFromPost.data]);\r\n    }\r\n    newModel();\r\n  };\r\n\r\n  const ResponseTable = () => {\r\n    return (\r\n      <Table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Status of data gathering</td>\r\n            <td>{getresponse}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Status of Model Compiling</td>\r\n            <td>{postresponse}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Epochs</th>\r\n            <th>Batch size</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{epochs}</td>\r\n            <td>{batchsize}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"name\"\r\n                onChange={(event) =>\r\n                  setEpochs(event.target.value.replace(/\\D/, \"\"))\r\n                }\r\n              />\r\n            </td>\r\n            <td>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"name\"\r\n                onChange={(event) =>\r\n                  setBatchSize(event.target.value.replace(/\\D/, \"\"))\r\n                }\r\n              />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Amount of Units</th>\r\n            <th>Activation function</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {listItems}\r\n          <tr>\r\n            <td></td>\r\n            <td>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"name\"\r\n                placeholder=\"integer\"\r\n                onChange={(event) => setUnits(event.target.value)}\r\n              />\r\n            </td>\r\n            <td>\r\n              <DropdownButton id=\"dropdown-basic-button\" title={activation}>\r\n                <Dropdown.Item\r\n                  onClick={(event) => setActivation(event.target.textContent)}\r\n                >\r\n                  ReLU\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={(event) => setActivation(event.target.textContent)}\r\n                >\r\n                  Sigmoid\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={(event) => setActivation(event.target.textContent)}\r\n                >\r\n                  Tanh\r\n                </Dropdown.Item>\r\n              </DropdownButton>\r\n            </td>\r\n\r\n            <td>\r\n              <Button variant=\"primary\" onClick={() => clicked()}>\r\n                Add layer\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showError ? <SettingsError /> : null}\r\n\r\n      <Table striped bordered hover>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <Button onClick={() => setBackendModel(\"Original\")}>\r\n                Load Original Model\r\n              </Button>\r\n            </td>\r\n            <td>\r\n              <Button onClick={() => setBackendModel(\"User\")}>\r\n                Load User Model\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showModel ? <SettingsModel /> : null}\r\n\r\n      <Button variant=\"warning\" onClick={() => createNewModel(\"Original\")}>\r\n        <h3>Create a new Neural Network model using the settings above</h3>\r\n      </Button>\r\n      {showResponse ? <ResponseTable /> : null}\r\n    </Container>\r\n  );\r\n}\r\nexport default Predictionsettings;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./Components/Nav\";\nimport Home from \"./Components/Home\";\nimport Currency from \"./Components/Currency\";\nimport CurrencyDetail from \"./Components/CurrencyDetail\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Predictionsettings from \"./Components/Predictionsettings\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/currency\" exact component={Currency} />\n          <Route path=\"/currency/:id\" component={CurrencyDetail} />\n          <Route path=\"/predictionsettings\" component={Predictionsettings} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}